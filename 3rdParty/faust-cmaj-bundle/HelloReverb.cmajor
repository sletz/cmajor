graph HelloReverb [[ main ]]
{
    output stream float out0, out1;

    // Input events for "voice"
    input event float32 freq [[ name: "freq", min: 50, max: 1000, init: 440, step: 0.01 ]];
    input event float32 bend [[ name: "bend", min: -2, max: 2, init: 0, step: 0.01 ]];
    input event float32 gain [[ name: "gain", min: 0, max: 1, init: 0.6, step: 0.01 ]];
    input event float32 envAttack [[ name: "envAttack", min: 0, max: 30, init: 1, step: 0.01 ]];
    input event float32 sustain [[ name: "sustain", min: 0, max: 1, init: 0, step: 1 ]];
    input event float32 reedStiffness [[ name: "reedStiffness", min: 0, max: 1, init: 0.5, step: 0.01 ]];
    input event float32 bellOpening [[ name: "bellOpening", min: 0, max: 1, init: 0.5, step: 0.01 ]];
    input event float32 vibratoFreq [[ name: "vibratoFreq", min: 1, max: 10, init: 5, step: 0.01 ]];
    input event float32 vibratoGain [[ name: "vibratoGain", min: 0, max: 1, init: 0.25, step: 0.01 ]];
    input event float32 outGain [[ name: "outGain", min: 0, max: 1, init: 0.5, step: 0.01 ]];
    input event float32 gate [[ name: "gate", text: "off|on", boolean ]];

    node Hello = HelloWorld;
    node Reverb = faust::reverb;
    node Echo = faust::echo;
    node Clarinet = faust::voice;

    connection
    {
        // This depends of the actual Faust voice (clarinet_ui_MIDI here), how to code this section in a generic way?
        gate -> Clarinet.gate;
        freq -> Clarinet.freq;
        
        /*
        Hello.out -> Reverb.input0, Reverb.input1;

        Reverb.output0 -> Echo.input0;
        Reverb.output1 -> Echo.input1;

        Echo.output0 -> out0;
        Echo.output1 -> out1;
        */
       
        Clarinet.output0 -> Reverb.input0;
        Clarinet.output1 -> Reverb.input1;

        Reverb.output0 -> Echo.input0;
        Reverb.output1 -> Echo.input1;

        Echo.output0 -> out0;
        Echo.output1 -> out1;
    }
}